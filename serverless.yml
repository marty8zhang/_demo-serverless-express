org: marty8zhang
app: demo-serverless-express
service: demo-serverless-express

frameworkVersion: '^2'
useDotenv: true

provider:
    name: aws
    runtime: nodejs14.x
    lambdaHashingVersion: '20201221'
    stage: dev
    region: ap-southeast-2
    profile: serverless-test
    memorySize: 128
    # AWS API Gateway max timeout is 30 secs.
    timeout: 30
    versionFunctions: false
    tags:
        serverless: ''
    environment:
        DB_HOST: ${env:DB_HOST}
        DB_PORT: ${env:DB_PORT}
        DB_USER: ${env:DB_USER}
        DB_PASSWORD: ${env:DB_PASSWORD}
        DB_DATABASE: ${env:DB_DATABASE}

functions:
    testServerlessExpress:
        handler: dist/handler.handler
        events:
            -   http:
                    path: /
                    method: ANY
            -   http:
                    path: /{proxy+}
                    method: ANY
        vpc:
            securityGroupIds:
                - sg-0921d8779a6b3fecf
            subnetIds:
                - subnet-9c4492fb

resources:
    # @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html
    Resources:
        CognitoUserPool:
            Type: AWS::Cognito::UserPool
            Properties:
                UserPoolName: ${sls:stage}_demo-serverless-express_user-pool
                UsernameAttributes:
                    - email
        CognitoUserPoolDomain:
            Type: AWS::Cognito::UserPoolDomain
            Properties:
                UserPoolId: !Ref CognitoUserPool
                Domain: ${sls:stage}-demo-serverless-express
        CognitoUserPoolResourceServer:
            Type: AWS::Cognito::UserPoolResourceServer
            Properties:
                UserPoolId: !Ref CognitoUserPool
                Identifier: !Join [ '', [ 'https://', !Ref CognitoUserPoolDomain ] ]
                Name: ${sls:stage}_demo-serverless-express_resource-server
                Scopes:
                    -   ScopeName: root.read
                        ScopeDescription: GET Hello from root.
                    -   ScopeName: subPath.read
                        ScopeDescription: GET Hello from sub-path.
        CognitoUserPoolClient:
            Type: AWS::Cognito::UserPoolClient
            Properties:
                UserPoolId: !Ref CognitoUserPool
                ClientName: ${sls:stage}_demo-serverless-express_app-client
                GenerateSecret: true
                SupportedIdentityProviders:
                    - COGNITO
                ExplicitAuthFlows:
                    - ALLOW_CUSTOM_AUTH
                    - ALLOW_USER_SRP_AUTH
                    - ALLOW_REFRESH_TOKEN_AUTH
                AllowedOAuthFlows:
                    - client_credentials
                AllowedOAuthScopes:
                    - !Join ['', [!Ref CognitoUserPoolResourceServer, '/root.read']]
                    - !Join ['', [!Ref CognitoUserPoolResourceServer, '/subPath.read']]

plugins:
    - serverless-offline
